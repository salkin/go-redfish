/*
Redfish OAPI specification

Partial Redfish OAPI specification for a limited client

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// SystemLinks struct for SystemLinks
type SystemLinks struct {
	Chassis []IdRef `json:"Chassis,omitempty"`
	ManagedBy []IdRef `json:"ManagedBy,omitempty"`
}

// NewSystemLinks instantiates a new SystemLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemLinks() *SystemLinks {
	this := SystemLinks{}
	return &this
}

// NewSystemLinksWithDefaults instantiates a new SystemLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemLinksWithDefaults() *SystemLinks {
	this := SystemLinks{}
	return &this
}

// GetChassis returns the Chassis field value if set, zero value otherwise.
func (o *SystemLinks) GetChassis() []IdRef {
	if o == nil || o.Chassis == nil {
		var ret []IdRef
		return ret
	}
	return o.Chassis
}

// GetChassisOk returns a tuple with the Chassis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLinks) GetChassisOk() ([]IdRef, bool) {
	if o == nil || o.Chassis == nil {
		return nil, false
	}
	return o.Chassis, true
}

// HasChassis returns a boolean if a field has been set.
func (o *SystemLinks) HasChassis() bool {
	if o != nil && o.Chassis != nil {
		return true
	}

	return false
}

// SetChassis gets a reference to the given []IdRef and assigns it to the Chassis field.
func (o *SystemLinks) SetChassis(v []IdRef) {
	o.Chassis = v
}

// GetManagedBy returns the ManagedBy field value if set, zero value otherwise.
func (o *SystemLinks) GetManagedBy() []IdRef {
	if o == nil || o.ManagedBy == nil {
		var ret []IdRef
		return ret
	}
	return o.ManagedBy
}

// GetManagedByOk returns a tuple with the ManagedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLinks) GetManagedByOk() ([]IdRef, bool) {
	if o == nil || o.ManagedBy == nil {
		return nil, false
	}
	return o.ManagedBy, true
}

// HasManagedBy returns a boolean if a field has been set.
func (o *SystemLinks) HasManagedBy() bool {
	if o != nil && o.ManagedBy != nil {
		return true
	}

	return false
}

// SetManagedBy gets a reference to the given []IdRef and assigns it to the ManagedBy field.
func (o *SystemLinks) SetManagedBy(v []IdRef) {
	o.ManagedBy = v
}

func (o SystemLinks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Chassis != nil {
		toSerialize["Chassis"] = o.Chassis
	}
	if o.ManagedBy != nil {
		toSerialize["ManagedBy"] = o.ManagedBy
	}
	return json.Marshal(toSerialize)
}

type NullableSystemLinks struct {
	value *SystemLinks
	isSet bool
}

func (v NullableSystemLinks) Get() *SystemLinks {
	return v.value
}

func (v *NullableSystemLinks) Set(val *SystemLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemLinks(val *SystemLinks) *NullableSystemLinks {
	return &NullableSystemLinks{value: val, isSet: true}
}

func (v NullableSystemLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


