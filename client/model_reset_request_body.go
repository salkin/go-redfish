/*
Redfish OAPI specification

Partial Redfish OAPI specification for a limited client

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ResetRequestBody struct for ResetRequestBody
type ResetRequestBody struct {
	ResetType *ResetType `json:"ResetType,omitempty"`
}

// NewResetRequestBody instantiates a new ResetRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResetRequestBody() *ResetRequestBody {
	this := ResetRequestBody{}
	return &this
}

// NewResetRequestBodyWithDefaults instantiates a new ResetRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResetRequestBodyWithDefaults() *ResetRequestBody {
	this := ResetRequestBody{}
	return &this
}

// GetResetType returns the ResetType field value if set, zero value otherwise.
func (o *ResetRequestBody) GetResetType() ResetType {
	if o == nil || o.ResetType == nil {
		var ret ResetType
		return ret
	}
	return *o.ResetType
}

// GetResetTypeOk returns a tuple with the ResetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResetRequestBody) GetResetTypeOk() (*ResetType, bool) {
	if o == nil || o.ResetType == nil {
		return nil, false
	}
	return o.ResetType, true
}

// HasResetType returns a boolean if a field has been set.
func (o *ResetRequestBody) HasResetType() bool {
	if o != nil && o.ResetType != nil {
		return true
	}

	return false
}

// SetResetType gets a reference to the given ResetType and assigns it to the ResetType field.
func (o *ResetRequestBody) SetResetType(v ResetType) {
	o.ResetType = &v
}

func (o ResetRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResetType != nil {
		toSerialize["ResetType"] = o.ResetType
	}
	return json.Marshal(toSerialize)
}

type NullableResetRequestBody struct {
	value *ResetRequestBody
	isSet bool
}

func (v NullableResetRequestBody) Get() *ResetRequestBody {
	return v.value
}

func (v *NullableResetRequestBody) Set(val *ResetRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableResetRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableResetRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResetRequestBody(val *ResetRequestBody) *NullableResetRequestBody {
	return &NullableResetRequestBody{value: val, isSet: true}
}

func (v NullableResetRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResetRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


