/*
Redfish OAPI specification

Partial Redfish OAPI specification for a limited client

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// VirtualMediaActionsVirtualMediaEjectMedia struct for VirtualMediaActionsVirtualMediaEjectMedia
type VirtualMediaActionsVirtualMediaEjectMedia struct {
	// The unique identifier for a resource.
	Target *string `json:"target,omitempty"`
}

// NewVirtualMediaActionsVirtualMediaEjectMedia instantiates a new VirtualMediaActionsVirtualMediaEjectMedia object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualMediaActionsVirtualMediaEjectMedia() *VirtualMediaActionsVirtualMediaEjectMedia {
	this := VirtualMediaActionsVirtualMediaEjectMedia{}
	return &this
}

// NewVirtualMediaActionsVirtualMediaEjectMediaWithDefaults instantiates a new VirtualMediaActionsVirtualMediaEjectMedia object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualMediaActionsVirtualMediaEjectMediaWithDefaults() *VirtualMediaActionsVirtualMediaEjectMedia {
	this := VirtualMediaActionsVirtualMediaEjectMedia{}
	return &this
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *VirtualMediaActionsVirtualMediaEjectMedia) GetTarget() string {
	if o == nil || o.Target == nil {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMediaActionsVirtualMediaEjectMedia) GetTargetOk() (*string, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *VirtualMediaActionsVirtualMediaEjectMedia) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *VirtualMediaActionsVirtualMediaEjectMedia) SetTarget(v string) {
	o.Target = &v
}

func (o VirtualMediaActionsVirtualMediaEjectMedia) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualMediaActionsVirtualMediaEjectMedia struct {
	value *VirtualMediaActionsVirtualMediaEjectMedia
	isSet bool
}

func (v NullableVirtualMediaActionsVirtualMediaEjectMedia) Get() *VirtualMediaActionsVirtualMediaEjectMedia {
	return v.value
}

func (v *NullableVirtualMediaActionsVirtualMediaEjectMedia) Set(val *VirtualMediaActionsVirtualMediaEjectMedia) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualMediaActionsVirtualMediaEjectMedia) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualMediaActionsVirtualMediaEjectMedia) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualMediaActionsVirtualMediaEjectMedia(val *VirtualMediaActionsVirtualMediaEjectMedia) *NullableVirtualMediaActionsVirtualMediaEjectMedia {
	return &NullableVirtualMediaActionsVirtualMediaEjectMedia{value: val, isSet: true}
}

func (v NullableVirtualMediaActionsVirtualMediaEjectMedia) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualMediaActionsVirtualMediaEjectMedia) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


